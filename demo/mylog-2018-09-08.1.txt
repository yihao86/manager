Found resource handler mapping: URL pattern="/**/favicon.ico", locations=[class path resource [templates/], ServletContext resource [/], class path resource []], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@5e99b9c]
Found resource handler mapping: URL pattern="/webjars/**", locations=[class path resource [META-INF/resources/webjars/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@58af5076]
Found resource handler mapping: URL pattern="/**", locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]
Found key 'spring.liveBeansView.mbeanDomain' in PropertySource 'systemProperties' with value of type String
Starting ProtocolHandler ["http-nio-8080"]
Using a shared selector for servlet write/read
Tomcat started on port(s): 8080 (http) with context path '/yihao'
Returning cached instance of singleton bean 'springApplicationAdminRegistrar'
Adding PropertySource 'server.ports' with highest search precedence
Started MyApplication in 12.338 seconds (JVM running for 13.918)
Returning cached instance of singleton bean 'springApplicationAdminRegistrar'
Initializing servlet 'dispatcherServlet'
Initializing Spring FrameworkServlet 'dispatcherServlet'
FrameworkServlet 'dispatcherServlet': initialization started
Returning cached instance of singleton bean 'multipartResolver'
Using MultipartResolver [org.springframework.web.multipart.support.StandardServletMultipartResolver@5b4e830c]
Creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Returning cached instance of singleton bean 'org.springframework.cache.config.internalCacheAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver'
Unable to locate LocaleResolver with name 'localeResolver': using default [org.springframework.web.servlet.i18n.AcceptHeaderLocaleResolver@1bb28d1f]
Creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Returning cached instance of singleton bean 'org.springframework.cache.config.internalCacheAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'org.springframework.web.servlet.theme.FixedThemeResolver'
Unable to locate ThemeResolver with name 'themeResolver': using default [org.springframework.web.servlet.theme.FixedThemeResolver@201ed3f1]
Returning cached instance of singleton bean 'faviconHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerMapping'
Returning cached instance of singleton bean 'viewControllerHandlerMapping'
Returning cached instance of singleton bean 'beanNameHandlerMapping'
Returning cached instance of singleton bean 'resourceHandlerMapping'
Returning cached instance of singleton bean 'defaultServletHandlerMapping'
Returning cached instance of singleton bean 'welcomePageHandlerMapping'
Returning cached instance of singleton bean 'requestMappingHandlerAdapter'
Returning cached instance of singleton bean 'httpRequestHandlerAdapter'
Returning cached instance of singleton bean 'simpleControllerHandlerAdapter'
Returning cached instance of singleton bean 'errorAttributes'
Returning cached instance of singleton bean 'handlerExceptionResolver'
Creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Returning cached instance of singleton bean 'org.springframework.cache.config.internalCacheAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator'
Unable to locate RequestToViewNameTranslator with name 'viewNameTranslator': using default [org.springframework.web.servlet.view.DefaultRequestToViewNameTranslator@668c9340]
Returning cached instance of singleton bean 'beanNameViewResolver'
Returning cached instance of singleton bean 'mvcViewResolver'
Returning cached instance of singleton bean 'defaultViewResolver'
Returning cached instance of singleton bean 'viewResolver'
Returning cached instance of singleton bean 'thymeleafViewResolver'
Creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Returning cached instance of singleton bean 'org.springframework.cache.config.internalCacheAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Finished creating instance of bean 'org.springframework.web.servlet.support.SessionFlashMapManager'
Unable to locate FlashMapManager with name 'flashMapManager': using default [org.springframework.web.servlet.support.SessionFlashMapManager@798eed32]
Published WebApplicationContext of servlet 'dispatcherServlet' as ServletContext attribute with name [org.springframework.web.servlet.FrameworkServlet.CONTEXT.dispatcherServlet]
FrameworkServlet 'dispatcherServlet': initialization completed in 70 ms
Servlet 'dispatcherServlet' configured successfully
Bound request context to thread: org.apache.catalina.connector.RequestFacade@1fe2641f
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/pages-teacherLogin.html]
Looking up handler method for path /pages-teacherLogin.html
Did not find handler method for [/pages-teacherLogin.html]
Matching patterns for request [/pages-teacherLogin.html] are [/**]
URI Template variables for request [/pages-teacherLogin.html] are {}
Mapping [/pages-teacherLogin.html] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/pages-teacherLogin.html] is: -1
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@1fe2641f
Bound request context to thread: org.apache.catalina.connector.RequestFacade@1fe2641f
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/bower_components/bootstrap/dist/js/bootstrap.min.js]
Looking up handler method for path /bower_components/bootstrap/dist/js/bootstrap.min.js
Did not find handler method for [/bower_components/bootstrap/dist/js/bootstrap.min.js]
Matching patterns for request [/bower_components/bootstrap/dist/js/bootstrap.min.js] are [/**]
URI Template variables for request [/bower_components/bootstrap/dist/js/bootstrap.min.js] are {}
Mapping [/bower_components/bootstrap/dist/js/bootstrap.min.js] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/bower_components/bootstrap/dist/js/bootstrap.min.js] is: -1
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@1fe2641f
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/error]
Looking up handler method for path /error
Returning handler method [public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
Returning cached instance of singleton bean 'basicErrorController'
Last-Modified value for [/yihao/error] is: -1
Bound request context to thread: org.apache.catalina.connector.RequestFacade@6528cec7
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/css/font-awesome.min.css]
Looking up handler method for path /css/font-awesome.min.css
Did not find handler method for [/css/font-awesome.min.css]
Matching patterns for request [/css/font-awesome.min.css] are [/**]
URI Template variables for request [/css/font-awesome.min.css] are {}
Mapping [/css/font-awesome.min.css] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/css/font-awesome.min.css] is: -1
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@6528cec7
Bound request context to thread: org.apache.catalina.connector.RequestFacade@6528cec7
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/css/cssss/style1.css]
Looking up handler method for path /css/cssss/style1.css
Bound request context to thread: org.apache.catalina.connector.RequestFacade@10f83bca
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/css/simple-line-icons.css]
Looking up handler method for path /css/simple-line-icons.css
Did not find handler method for [/css/simple-line-icons.css]
Matching patterns for request [/css/simple-line-icons.css] are [/**]
URI Template variables for request [/css/simple-line-icons.css] are {}
Mapping [/css/simple-line-icons.css] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/css/simple-line-icons.css] is: -1
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@10f83bca
Bound request context to thread: org.apache.catalina.connector.RequestFacade@3053608d
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/js/jquery-1.8.3.js]
Bound request context to thread: org.apache.catalina.connector.RequestFacade@10f83bca
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/bower_components/tether/dist/js/tether.min.js]
Looking up handler method for path /js/jquery-1.8.3.js
Looking up handler method for path /bower_components/tether/dist/js/tether.min.js
Did not find handler method for [/js/jquery-1.8.3.js]
Did not find handler method for [/bower_components/tether/dist/js/tether.min.js]
Matching patterns for request [/js/jquery-1.8.3.js] are [/**]
URI Template variables for request [/js/jquery-1.8.3.js] are {}
Mapping [/js/jquery-1.8.3.js] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Matching patterns for request [/bower_components/tether/dist/js/tether.min.js] are [/**]
URI Template variables for request [/bower_components/tether/dist/js/tether.min.js] are {}
Mapping [/bower_components/tether/dist/js/tether.min.js] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/bower_components/tether/dist/js/tether.min.js] is: -1
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@10f83bca
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/error]
Looking up handler method for path /error
Returning handler method [public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
Returning cached instance of singleton bean 'basicErrorController'
Last-Modified value for [/yihao/error] is: -1
Did not find handler method for [/css/cssss/style1.css]
Last-Modified value for [/yihao/js/jquery-1.8.3.js] is: -1
Matching patterns for request [/css/cssss/style1.css] are [/**]
URI Template variables for request [/css/cssss/style1.css] are {}
Mapping [/css/cssss/style1.css] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/css/cssss/style1.css] is: -1
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@3053608d
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@6528cec7
Bound request context to thread: org.apache.catalina.connector.RequestFacade@6528cec7
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/bower_components/jquery/dist/jquery.min.js]
Looking up handler method for path /bower_components/jquery/dist/jquery.min.js
Did not find handler method for [/bower_components/jquery/dist/jquery.min.js]
Matching patterns for request [/bower_components/jquery/dist/jquery.min.js] are [/**]
URI Template variables for request [/bower_components/jquery/dist/jquery.min.js] are {}
Mapping [/bower_components/jquery/dist/jquery.min.js] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/bower_components/jquery/dist/jquery.min.js] is: -1
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@6528cec7
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/error]
Looking up handler method for path /error
Returning handler method [public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
Returning cached instance of singleton bean 'basicErrorController'
Last-Modified value for [/yihao/error] is: -1
Written [{timestamp=Sat Sep 08 08:58:34 CST 2018, status=404, error=Not Found, message=No message available, path=/yihao/bower_components/tether/dist/js/tether.min.js}] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@4b4eced1]
Written [{timestamp=Sat Sep 08 08:58:34 CST 2018, status=404, error=Not Found, message=No message available, path=/yihao/bower_components/bootstrap/dist/js/bootstrap.min.js}] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@4b4eced1]
Written [{timestamp=Sat Sep 08 08:58:34 CST 2018, status=404, error=Not Found, message=No message available, path=/yihao/bower_components/jquery/dist/jquery.min.js}] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@4b4eced1]
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Bound request context to thread: org.apache.catalina.connector.RequestFacade@6528cec7
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/fonts/Simple-Line-Icons.woff2]
Looking up handler method for path /fonts/Simple-Line-Icons.woff2
Did not find handler method for [/fonts/Simple-Line-Icons.woff2]
Matching patterns for request [/fonts/Simple-Line-Icons.woff2] are [/**]
URI Template variables for request [/fonts/Simple-Line-Icons.woff2] are {}
Mapping [/fonts/Simple-Line-Icons.woff2] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/fonts/Simple-Line-Icons.woff2] is: -1
Skip CORS processing: request is from same origin
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@6528cec7
Bound request context to thread: org.apache.catalina.connector.RequestFacade@6528cec7
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/bower_components/jquery/dist/jquery.min.js]
Looking up handler method for path /bower_components/jquery/dist/jquery.min.js
Did not find handler method for [/bower_components/jquery/dist/jquery.min.js]
Matching patterns for request [/bower_components/jquery/dist/jquery.min.js] are [/**]
URI Template variables for request [/bower_components/jquery/dist/jquery.min.js] are {}
Mapping [/bower_components/jquery/dist/jquery.min.js] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/bower_components/jquery/dist/jquery.min.js] is: -1
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@6528cec7
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/error]
Looking up handler method for path /error
Returning handler method [public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
Returning cached instance of singleton bean 'basicErrorController'
Last-Modified value for [/yihao/error] is: -1
Written [{timestamp=Sat Sep 08 08:58:37 CST 2018, status=404, error=Not Found, message=No message available, path=/yihao/bower_components/jquery/dist/jquery.min.js}] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@4b4eced1]
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Bound request context to thread: org.apache.catalina.connector.RequestFacade@6528cec7
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/bower_components/tether/dist/js/tether.min.js]
Bound request context to thread: org.apache.catalina.connector.RequestFacade@10f83bca
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/fonts/Simple-Line-Icons.ttf]
Looking up handler method for path /bower_components/tether/dist/js/tether.min.js
Looking up handler method for path /fonts/Simple-Line-Icons.ttf
Did not find handler method for [/fonts/Simple-Line-Icons.ttf]
Matching patterns for request [/fonts/Simple-Line-Icons.ttf] are [/**]
URI Template variables for request [/fonts/Simple-Line-Icons.ttf] are {}
Mapping [/fonts/Simple-Line-Icons.ttf] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/fonts/Simple-Line-Icons.ttf] is: -1
Skip CORS processing: request is from same origin
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@10f83bca
Did not find handler method for [/bower_components/tether/dist/js/tether.min.js]
Matching patterns for request [/bower_components/tether/dist/js/tether.min.js] are [/**]
URI Template variables for request [/bower_components/tether/dist/js/tether.min.js] are {}
Mapping [/bower_components/tether/dist/js/tether.min.js] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/bower_components/tether/dist/js/tether.min.js] is: -1
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@6528cec7
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/error]
Looking up handler method for path /error
Returning handler method [public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
Returning cached instance of singleton bean 'basicErrorController'
Last-Modified value for [/yihao/error] is: -1
Written [{timestamp=Sat Sep 08 08:58:37 CST 2018, status=404, error=Not Found, message=No message available, path=/yihao/bower_components/tether/dist/js/tether.min.js}] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@4b4eced1]
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Bound request context to thread: org.apache.catalina.connector.RequestFacade@6528cec7
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/bower_components/bootstrap/dist/js/bootstrap.min.js]
Looking up handler method for path /bower_components/bootstrap/dist/js/bootstrap.min.js
Did not find handler method for [/bower_components/bootstrap/dist/js/bootstrap.min.js]
Matching patterns for request [/bower_components/bootstrap/dist/js/bootstrap.min.js] are [/**]
URI Template variables for request [/bower_components/bootstrap/dist/js/bootstrap.min.js] are {}
Mapping [/bower_components/bootstrap/dist/js/bootstrap.min.js] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/bower_components/bootstrap/dist/js/bootstrap.min.js] is: -1
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@6528cec7
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/error]
Looking up handler method for path /error
Returning handler method [public org.springframework.http.ResponseEntity<java.util.Map<java.lang.String, java.lang.Object>> org.springframework.boot.autoconfigure.web.servlet.error.BasicErrorController.error(javax.servlet.http.HttpServletRequest)]
Returning cached instance of singleton bean 'basicErrorController'
Last-Modified value for [/yihao/error] is: -1
Written [{timestamp=Sat Sep 08 08:58:37 CST 2018, status=404, error=Not Found, message=No message available, path=/yihao/bower_components/bootstrap/dist/js/bootstrap.min.js}] as "application/json" using [org.springframework.http.converter.json.MappingJackson2HttpMessageConverter@4b4eced1]
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Bound request context to thread: org.apache.catalina.connector.RequestFacade@10f83bca
DispatcherServlet with name 'dispatcherServlet' processing POST request for [/yihao/LoginTeacher]
Looking up handler method for path /LoginTeacher
Returning handler method [public org.springframework.web.servlet.ModelAndView com.yihao86.controller.TeachersController.LoginTeacher(org.springframework.web.servlet.ModelAndView,com.yihao86.pojo.Teachers,javax.servlet.http.HttpSession)]
Returning cached instance of singleton bean 'teachersController'
Skip CORS processing: request is from same origin
Creating a new SqlSession
SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@322e6cff] was not registered for synchronization because synchronization is not active
Fetching JDBC Connection from DataSource
HikariPool-1 - configuration:
allowPoolSuspension.............false
autoCommit......................true
catalog.........................none
connectionInitSql...............none
connectionTestQuery.............none
connectionTimeout...............30000
dataSource......................none
dataSourceClassName.............none
dataSourceJNDI..................none
dataSourceProperties............{password=<masked>}
driverClassName................."com.mysql.jdbc.Driver"
healthCheckProperties...........{}
healthCheckRegistry.............none
idleTimeout.....................600000
initializationFailFast..........true
initializationFailTimeout.......1
isolateInternalQueries..........false
jdbc4ConnectionTest.............false
jdbcUrl.........................jdbc:mysql://111.230.232.46:3306/yihao86?serverTimezone=GMT&useSSL=false&useUnicode=true&characterEncoding=utf-8
leakDetectionThreshold..........0
maxLifetime.....................1800000
maximumPoolSize.................10
metricRegistry..................none
metricsTrackerFactory...........none
minimumIdle.....................10
password........................<masked>
poolName........................"HikariPool-1"
readOnly........................false
registerMbeans..................false
scheduledExecutor...............none
scheduledExecutorService........internal
schema..........................none
threadFactory...................internal
transactionIsolation............default
username........................"root"
validationTimeout...............5000
HikariPool-1 - Starting...
HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@573053b8
HikariPool-1 - Start completed.
JDBC Connection [HikariProxyConnection@1028329376 wrapping com.mysql.jdbc.JDBC4Connection@573053b8] will not be managed by Spring
==>  Preparing: SELECT * FROM teachers WHERE t_password=? AND t_account=? AND t_email=? 
==> Parameters: 123456789(String), 123456789(String), 123456789@qq.com(String)
HikariPool-1 - Pool stats (total=1, active=1, idle=0, waiting=0)
<==      Total: 1
Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@322e6cff]
Returning JDBC Connection to DataSource
Opening RedisConnection
Trying to get a Redis connection for: RedisURI [host='111.230.232.46', port=6379]
Starting without optional epoll library
Starting without optional kqueue library
-Dio.netty.eventLoopThreads: 8
-Dio.netty.noKeySetOptimization: false
-Dio.netty.selectorAutoRebuildThreshold: 512
Adding reference to io.netty.channel.nio.NioEventLoopGroup@4dd1d574, existing ref count 0
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Connecting to Redis at 111.230.232.46:6379
-Dio.netty.processId: 10956 (auto-detected)
-Djava.net.preferIPv4Stack: false
-Djava.net.preferIPv6Addresses: false
Loopback interface: lo (Software Loopback Interface 1, 127.0.0.1)
Failed to get SOMAXCONN from sysctl and file \proc\sys\net\core\somaxconn. Default: 200
-Dio.netty.machineId: 80:a5:89:ff:fe:ab:86:19 (auto-detected)
-Dio.netty.allocator.type: pooled
-Dio.netty.threadLocalDirectBufferSize: 0
-Dio.netty.maxThreadLocalCharBufferSize: 16384
-Dio.netty.recycler.maxCapacityPerThread: 4096
-Dio.netty.recycler.maxSharedCapacityFactor: 2
-Dio.netty.recycler.linkCapacity: 16
-Dio.netty.recycler.ratio: 8
-Dio.netty.buffer.bytebuf.checkAccessible: true
Loaded default ResourceLeakDetector: io.netty.util.ResourceLeakDetector@101272d0
[channel=0xafff7cdf, [id: 0x8f150d54] (inactive), chid=0x1] channelRegistered()
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, chid=0x1] channelActive()
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, epid=0x1] activating endpoint
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 0 commands
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, chid=0x1] channelActive() done
Connecting to Redis at 111.230.232.46:6379: Success
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@41d591da)
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@41d591da)
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, chid=0x1] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, chid=0x1] Stack contains: 1 commands
Decode AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
Decoded AsyncCommand [type=AUTH, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, chid=0x1] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, chid=0x1] Stack contains: 1 commands
Decode AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
Decoded AsyncCommand [type=SELECT, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
dispatching command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, chid=0x1] write(ctx, AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379] writing command AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, chid=0x1] Received: 5 bytes, 1 commands in the stack
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, chid=0x1] Stack contains: 1 commands
Decode AsyncCommand [type=SET, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
Decoded AsyncCommand [type=SET, output=StatusOutput [output=OK, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
Closing Redis Connection
Requested media types are [text/html, application/xhtml+xml, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8] based on Accept header types and producible media types [*/*])
No matching bean found for view name 'forward:/VodeoManager'
Returning [org.springframework.web.servlet.view.InternalResourceView: unnamed; URL [/VodeoManager]] based on requested media type 'text/html'
Rendering view [org.springframework.web.servlet.view.InternalResourceView: unnamed; URL [/VodeoManager]] in DispatcherServlet with name 'dispatcherServlet'
Added model object 'modelAndView' of type [org.springframework.web.servlet.ModelAndView] to request in view with name 'null'
Added model object 'org.springframework.validation.BindingResult.modelAndView' of type [org.springframework.validation.BeanPropertyBindingResult] to request in view with name 'null'
Added model object 'teachers' of type [com.yihao86.pojo.Teachers] to request in view with name 'null'
Added model object 'org.springframework.validation.BindingResult.teachers' of type [org.springframework.validation.BeanPropertyBindingResult] to request in view with name 'null'
Forwarding to resource [/VodeoManager] in InternalResourceView 'null'
DispatcherServlet with name 'dispatcherServlet' processing POST request for [/yihao/VodeoManager]
Looking up handler method for path /VodeoManager
Returning handler method [public org.springframework.web.servlet.ModelAndView com.yihao86.controller.VideosController.VodeoManager(org.springframework.web.servlet.ModelAndView,javax.servlet.http.HttpSession)]
Returning cached instance of singleton bean 'videosController'
Skip CORS processing: request is from same origin
Opening RedisConnection
dispatching command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, chid=0x1] write(ctx, AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379] writing command AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, chid=0x1] Received: 435 bytes, 1 commands in the stack
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, chid=0x1] Stack contains: 1 commands
Decode AsyncCommand [type=GET, output=ValueOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
Decoded AsyncCommand [type=GET, output=ValueOutput [output=[B@4921793, error='null'], commandType=io.lettuce.core.protocol.Command], empty stack: true
Closing Redis Connection
Creating a new SqlSession
SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2680e795] was not registered for synchronization because synchronization is not active
Fetching JDBC Connection from DataSource
JDBC Connection [HikariProxyConnection@671684687 wrapping com.mysql.jdbc.JDBC4Connection@573053b8] will not be managed by Spring
==>  Preparing: SELECT v.`v_name`,a.`a_title`,c.`crname`,v.`v_uploadtime` FROM `videos` v INNER JOIN album a ON v.`v_aid`=a.`aid` INNER JOIN course c ON v.`v_crid`=c.`crid` WHERE v_teacherId = ? 
==> Parameters: 1(Integer)
<==      Total: 14
Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@2680e795]
Returning JDBC Connection to DataSource
Creating a new SqlSession
SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48395cd1] was not registered for synchronization because synchronization is not active
Fetching JDBC Connection from DataSource
JDBC Connection [HikariProxyConnection@182717293 wrapping com.mysql.jdbc.JDBC4Connection@573053b8] will not be managed by Spring
==>  Preparing: SELECT * FROM `follow` f INNER JOIN `users` u ON f.`f_uid`=u.`uid` WHERE f_ftid = ? 
==> Parameters: 1(Integer)
<==      Total: 3
Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@48395cd1]
Returning JDBC Connection to DataSource
Requested media types are [text/html, application/xhtml+xml, image/webp, image/apng, application/xml;q=0.9, */*;q=0.8] based on Accept header types and producible media types [*/*])
No matching bean found for view name 'teacherManager.html'
Returning cached instance of singleton bean 'org.springframework.cache.config.internalCacheAdvisor'
Returning cached instance of singleton bean 'org.springframework.transaction.config.internalTransactionAdvisor'
Invoking afterPropertiesSet() on bean with name 'teacherManager.html'
Returning [org.thymeleaf.spring5.view.ThymeleafView@74065181] based on requested media type 'text/html'
Rendering view [org.thymeleaf.spring5.view.ThymeleafView@74065181] in DispatcherServlet with name 'dispatcherServlet'
[THYMELEAF] INITIALIZING TEMPLATE ENGINE
Initializing Thymeleaf Template engine configuration...
[THYMELEAF] TEMPLATE ENGINE CONFIGURATION:
[THYMELEAF] * Thymeleaf version: 3.0.9.RELEASE (built 2017-11-05T00:10:15+0000)
[THYMELEAF] * Cache Manager implementation: org.thymeleaf.cache.StandardCacheManager
[THYMELEAF] * Template resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.templateresolver.SpringResourceTemplateResolver
[THYMELEAF] * Message resolvers:
[THYMELEAF]     * org.thymeleaf.spring5.messageresolver.SpringMessageResolver
[THYMELEAF] * Link builders:
[THYMELEAF]     * org.thymeleaf.linkbuilder.StandardLinkBuilder
[THYMELEAF] * Dialect [1 of 2]: SpringStandard (org.thymeleaf.spring5.dialect.SpringStandardDialect)
[THYMELEAF]     * Prefix: "th"
[THYMELEAF]     * Processors for Template Mode: HTML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include,data-th-include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert,data-th-insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace,data-th-replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby,data-th-substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each,data-th-each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch,data-th-switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case,data-th-case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if,data-th-if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless,data-th-unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object,data-th-object}] [500]: org.thymeleaf.spring5.processor.SpringObjectTagProcessor
[THYMELEAF]             * [* {th:with,data-th-with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr,data-th-attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend,data-th-attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend,data-th-attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:method,data-th-method}] [990]: org.thymeleaf.spring5.processor.SpringMethodTagProcessor
[THYMELEAF]             * [* {th:alt-title,data-th-alt-title}] [990]: org.thymeleaf.standard.processor.StandardAltTitleTagProcessor
[THYMELEAF]             * [* {th:lang-xmllang,data-th-lang-xmllang}] [990]: org.thymeleaf.standard.processor.StandardLangXmlLangTagProcessor
[THYMELEAF]             * [* {th:action,data-th-action}] [1000]: org.thymeleaf.spring5.processor.SpringActionTagProcessor
[THYMELEAF]             * [* {th:href,data-th-href}] [1000]: org.thymeleaf.spring5.processor.SpringHrefTagProcessor
[THYMELEAF]             * [* {th:src,data-th-src}] [1000]: org.thymeleaf.spring5.processor.SpringSrcTagProcessor
[THYMELEAF]             * [* {th:async,data-th-async}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:pubdate,data-th-pubdate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:controls,data-th-controls}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:open,data-th-open}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:novalidate,data-th-novalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:required,data-th-required}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:hidden,data-th-hidden}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:declare,data-th-declare}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:scoped,data-th-scoped}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:selected,data-th-selected}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:checked,data-th-checked}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:seamless,data-th-seamless}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:multiple,data-th-multiple}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:default,data-th-default}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:nowrap,data-th-nowrap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autoplay,data-th-autoplay}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:ismap,data-th-ismap}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:disabled,data-th-disabled}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:loop,data-th-loop}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:formnovalidate,data-th-formnovalidate}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:reversed,data-th-reversed}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:readonly,data-th-readonly}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:defer,data-th-defer}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:autofocus,data-th-autofocus}] [1000]: org.thymeleaf.standard.processor.StandardConditionalFixedValueTagProcessor
[THYMELEAF]             * [* {th:oncontextmenu,data-th-oncontextmenu}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreadystatechange,data-th-onreadystatechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseup,data-th-onmouseup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeydown,data-th-onkeydown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstorage,data-th-onstorage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onshow,data-th-onshow}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onload,data-th-onload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplay,data-th-onplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragleave,data-th-ondragleave}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadeddata,data-th-onloadeddata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onfocus,data-th-onfocus}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onreset,data-th-onreset}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onended,data-th-onended}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadedmetadata,data-th-onloadedmetadata}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onstalled,data-th-onstalled}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onscroll,data-th-onscroll}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninvalid,data-th-oninvalid}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragenter,data-th-ondragenter}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpause,data-th-onpause}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onerror,data-th-onerror}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onwaiting,data-th-onwaiting}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onchange,data-th-onchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmessage,data-th-onmessage}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeyup,data-th-onkeyup}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ononline,data-th-ononline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplay,data-th-oncanplay}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onforminput,data-th-onforminput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrop,data-th-ondrop}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onundo,data-th-onundo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ontimeupdate,data-th-ontimeupdate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onclick,data-th-onclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousewheel,data-th-onmousewheel}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onratechange,data-th-onratechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onloadstart,data-th-onloadstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onabort,data-th-onabort}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onredo,data-th-onredo}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onemptied,data-th-onemptied}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousedown,data-th-onmousedown}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragover,data-th-ondragover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragend,data-th-ondragend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseover,data-th-onmouseover}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onprogress,data-th-onprogress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onoffline,data-th-onoffline}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondrag,data-th-ondrag}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onplaying,data-th-onplaying}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondblclick,data-th-ondblclick}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsuspend,data-th-onsuspend}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmouseout,data-th-onmouseout}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oncanplaythrough,data-th-oncanplaythrough}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onselect,data-th-onselect}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onafterprint,data-th-onafterprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onsubmit,data-th-onsubmit}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onpopstate,data-th-onpopstate}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onmousemove,data-th-onmousemove}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeking,data-th-onseeking}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeunload,data-th-onbeforeunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onblur,data-th-onblur}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onresize,data-th-onresize}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onkeypress,data-th-onkeypress}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onformchange,data-th-onformchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:oninput,data-th-oninput}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onbeforeprint,data-th-onbeforeprint}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onvolumechange,data-th-onvolumechange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onunload,data-th-onunload}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondurationchange,data-th-ondurationchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:ondragstart,data-th-ondragstart}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onhashchange,data-th-onhashchange}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:onseeked,data-th-onseeked}] [1000]: org.thymeleaf.standard.processor.StandardDOMEventAttributeTagProcessor
[THYMELEAF]             * [* {th:inline,data-th-inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineHTMLTagProcessor
[THYMELEAF]             * [* {th:name,data-th-name}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:type,data-th-type}] [1000]: org.thymeleaf.standard.processor.StandardNonRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formaction,data-th-formaction}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dir,data-th-dir}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:id,data-th-id}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:target,data-th-target}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:span,data-th-span}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:for,data-th-for}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:list,data-th-list}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:standby,data-th-standby}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:longdesc,data-th-longdesc}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contextmenu,data-th-contextmenu}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:archive,data-th-archive}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:min,data-th-min}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:srclang,data-th-srclang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:draggable,data-th-draggable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:start,data-th-start}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cite,data-th-cite}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:title,data-th-title}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:lang,data-th-lang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:width,data-th-width}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:icon,data-th-icon}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept-charset,data-th-accept-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:compact,data-th-compact}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:radiogroup,data-th-radiogroup}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:tabindex,data-th-tabindex}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:alt,data-th-alt}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frameborder,data-th-frameborder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:classid,data-th-classid}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scrolling,data-th-scrolling}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:summary,data-th-summary}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:class,data-th-class}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:abbr,data-th-abbr}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sandbox,data-th-sandbox}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formenctype,data-th-formenctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:high,data-th-high}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellpadding,data-th-cellpadding}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:step,data-th-step}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:contenteditable,data-th-contenteditable}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cellspacing,data-th-cellspacing}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:frame,data-th-frame}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codebase,data-th-codebase}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formmethod,data-th-formmethod}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:sizes,data-th-sizes}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:charset,data-th-charset}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:usemap,data-th-usemap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:align,data-th-align}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:content,data-th-content}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:autocomplete,data-th-autocomplete}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:axis,data-th-axis}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:kind,data-th-kind}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:border,data-th-border}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:cols,data-th-cols}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:low,data-th-low}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:keytype,data-th-keytype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:headers,data-th-headers}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rowspan,data-th-rowspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:wrap,data-th-wrap}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:placeholder,data-th-placeholder}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rev,data-th-rev}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:background,data-th-background}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:data,data-th-data}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:height,data-th-height}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:spellcheck,data-th-spellcheck}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:datetime,data-th-datetime}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:colspan,data-th-colspan}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:preload,data-th-preload}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:form,data-th-form}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:challenge,data-th-challenge}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:audio,data-th-audio}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:formtarget,data-th-formtarget}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:style,data-th-style}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:pattern,data-th-pattern}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:max,data-th-max}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accesskey,data-th-accesskey}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:enctype,data-th-enctype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:http-equiv,data-th-http-equiv}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginheight,data-th-marginheight}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:maxlength,data-th-maxlength}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:vspace,data-th-vspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:poster,data-th-poster}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:bgcolor,data-th-bgcolor}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:manifest,data-th-manifest}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:label,data-th-label}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scope,data-th-scope}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hreflang,data-th-hreflang}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:codetype,data-th-codetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:optimum,data-th-optimum}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:dropzone,data-th-dropzone}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rules,data-th-rules}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rows,data-th-rows}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:size,data-th-size}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:media,data-th-media}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:rel,data-th-rel}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:scheme,data-th-scheme}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:hspace,data-th-hspace}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:valuetype,data-th-valuetype}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:marginwidth,data-th-marginwidth}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:accept,data-th-accept}] [1000]: org.thymeleaf.standard.processor.StandardRemovableAttributeTagProcessor
[THYMELEAF]             * [* {th:xmlbase,data-th-xmlbase}] [1000]: org.thymeleaf.standard.processor.StandardXmlBaseTagProcessor
[THYMELEAF]             * [* {th:xmllang,data-th-xmllang}] [1000]: org.thymeleaf.standard.processor.StandardXmlLangTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:xmlspace,data-th-xmlspace}] [1000]: org.thymeleaf.standard.processor.StandardXmlSpaceTagProcessor
[THYMELEAF]             * [{option} *] [1005]: org.thymeleaf.spring5.processor.SpringOptionInSelectFieldTagProcessor
[THYMELEAF]             * [* {th:value,data-th-value}] [1010]: org.thymeleaf.spring5.processor.SpringValueTagProcessor
[THYMELEAF]             * [* {th:classappend,data-th-classappend}] [1100]: org.thymeleaf.standard.processor.StandardClassappendTagProcessor
[THYMELEAF]             * [* {th:styleappend,data-th-styleappend}] [1100]: org.thymeleaf.standard.processor.StandardStyleappendTagProcessor
[THYMELEAF]             * [* {th:errors,data-th-errors}] [1200]: org.thymeleaf.spring5.processor.SpringErrorsTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputCheckboxFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputFileFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputGeneralFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputPasswordFieldTagProcessor
[THYMELEAF]             * [{input} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringInputRadioFieldTagProcessor
[THYMELEAF]             * [{option} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringOptionFieldTagProcessor
[THYMELEAF]             * [{select} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringSelectFieldTagProcessor
[THYMELEAF]             * [{textarea} {th:field,data-th-field}] [1200]: org.thymeleaf.spring5.processor.SpringTextareaFieldTagProcessor
[THYMELEAF]             * [* {th:uerrors,data-th-uerrors}] [1200]: org.thymeleaf.spring5.processor.SpringUErrorsTagProcessor
[THYMELEAF]             * [* {th:text,data-th-text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext,data-th-utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:errorclass,data-th-errorclass}] [1500]: org.thymeleaf.spring5.processor.SpringErrorClassTagProcessor
[THYMELEAF]             * [* {th:fragment,data-th-fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert,data-th-assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove,data-th-remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref,data-th-ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block,th-block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * DOCTYPE Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardTranslationDocTypeProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]             * [1100]: org.thymeleaf.standard.processor.StandardConditionalCommentProcessor
[THYMELEAF]     * Processors for Template Mode: XML
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:include}] [100]: org.thymeleaf.standard.processor.StandardIncludeTagProcessor
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:substituteby}] [100]: org.thymeleaf.standard.processor.StandardSubstituteByTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:attr}] [700]: org.thymeleaf.standard.processor.StandardAttrTagProcessor
[THYMELEAF]             * [* {th:attrprepend}] [800]: org.thymeleaf.standard.processor.StandardAttrprependTagProcessor
[THYMELEAF]             * [* {th:attrappend}] [900]: org.thymeleaf.standard.processor.StandardAttrappendTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineXMLTagProcessor
[THYMELEAF]             * [* {xmlns:th}] [1000]: org.thymeleaf.standard.processor.StandardXmlNsTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:fragment}] [1500]: org.thymeleaf.standard.processor.StandardFragmentTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* {th:ref}] [10000]: org.thymeleaf.standard.processor.StandardRefAttributeTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* th:*] [2147483647]: org.thymeleaf.standard.processor.StandardDefaultAttributesTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]         * CDATA Section Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCDATASectionProcessor
[THYMELEAF]         * Comment Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningCommentProcessor
[THYMELEAF]     * Processors for Template Mode: TEXT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: JAVASCRIPT
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Processors for Template Mode: CSS
[THYMELEAF]         * Element Tag Processors by [matching element and attribute name] [precedence]:
[THYMELEAF]             * [* {th:insert}] [100]: org.thymeleaf.standard.processor.StandardInsertTagProcessor
[THYMELEAF]             * [* {th:replace}] [100]: org.thymeleaf.standard.processor.StandardReplaceTagProcessor
[THYMELEAF]             * [* {th:each}] [200]: org.thymeleaf.standard.processor.StandardEachTagProcessor
[THYMELEAF]             * [* {th:switch}] [250]: org.thymeleaf.standard.processor.StandardSwitchTagProcessor
[THYMELEAF]             * [* {th:case}] [275]: org.thymeleaf.standard.processor.StandardCaseTagProcessor
[THYMELEAF]             * [* {th:if}] [300]: org.thymeleaf.standard.processor.StandardIfTagProcessor
[THYMELEAF]             * [* {th:unless}] [400]: org.thymeleaf.standard.processor.StandardUnlessTagProcessor
[THYMELEAF]             * [* {th:object}] [500]: org.thymeleaf.standard.processor.StandardObjectTagProcessor
[THYMELEAF]             * [* {th:with}] [600]: org.thymeleaf.standard.processor.StandardWithTagProcessor
[THYMELEAF]             * [* {th:inline}] [1000]: org.thymeleaf.standard.processor.StandardInlineTextualTagProcessor
[THYMELEAF]             * [* {th:text}] [1300]: org.thymeleaf.standard.processor.StandardTextTagProcessor
[THYMELEAF]             * [* {th:utext}] [1400]: org.thymeleaf.standard.processor.StandardUtextTagProcessor
[THYMELEAF]             * [* {th:assert}] [1550]: org.thymeleaf.standard.processor.StandardAssertTagProcessor
[THYMELEAF]             * [* {th:remove}] [1600]: org.thymeleaf.standard.processor.StandardRemoveTagProcessor
[THYMELEAF]             * [* 100000] [org.thymeleaf.standard.processor.StandardBlockTagProcessor]: {}
[THYMELEAF]             * [{th:block} *] [100000]: org.thymeleaf.standard.processor.StandardBlockTagProcessor
[THYMELEAF]         * Text Processors by [precedence]:
[THYMELEAF]             * [1000]: org.thymeleaf.standard.processor.StandardInliningTextProcessor
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #ctx
[THYMELEAF]         * #root
[THYMELEAF]         * #vars
[THYMELEAF]         * #object
[THYMELEAF]         * #locale
[THYMELEAF]         * #request
[THYMELEAF]         * #response
[THYMELEAF]         * #session
[THYMELEAF]         * #servletContext
[THYMELEAF]         * #conversions
[THYMELEAF]         * #uris
[THYMELEAF]         * #calendars
[THYMELEAF]         * #dates
[THYMELEAF]         * #bools
[THYMELEAF]         * #numbers
[THYMELEAF]         * #objects
[THYMELEAF]         * #strings
[THYMELEAF]         * #arrays
[THYMELEAF]         * #lists
[THYMELEAF]         * #sets
[THYMELEAF]         * #maps
[THYMELEAF]         * #aggregates
[THYMELEAF]         * #messages
[THYMELEAF]         * #ids
[THYMELEAF]         * #execInfo
[THYMELEAF]         * #httpServletRequest
[THYMELEAF]         * #httpSession
[THYMELEAF]         * #fields
[THYMELEAF]         * #themes
[THYMELEAF]         * #mvc
[THYMELEAF]         * #requestdatavalues
[THYMELEAF]     * Execution Attributes:
[THYMELEAF]         * "StandardExpressionParser": Standard Expression Parser
[THYMELEAF]         * "StandardJavaScriptSerializer": org.thymeleaf.standard.serializer.StandardJavaScriptSerializer@68e7f780
[THYMELEAF]         * "StandardCSSSerializer": org.thymeleaf.standard.serializer.StandardCSSSerializer@48e48e22
[THYMELEAF]         * "EnableSpringELCompiler": false
[THYMELEAF]         * "StandardVariableExpressionEvaluator": SpringEL
[THYMELEAF]         * "StandardConversionService": org.thymeleaf.spring5.expression.SpringStandardConversionService@67ca2b6c
[THYMELEAF] * Dialect [2 of 2]: java8time (org.thymeleaf.extras.java8time.dialect.Java8TimeDialect)
[THYMELEAF]     * Expression Objects:
[THYMELEAF]         * #temporals
[THYMELEAF] TEMPLATE ENGINE CONFIGURED OK
[THYMELEAF] TEMPLATE ENGINE INITIALIZED
Successfully completed request
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@10f83bca
Bound request context to thread: org.apache.catalina.connector.RequestFacade@1fe2641f
Bound request context to thread: org.apache.catalina.connector.RequestFacade@6528cec7
Bound request context to thread: org.apache.catalina.connector.RequestFacade@3053608d
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/css/fileinput.min.css]
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/css/slide.css]
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/js/jquery.min.js]
Bound request context to thread: org.apache.catalina.connector.RequestFacade@10f83bca
Looking up handler method for path /css/fileinput.min.css
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/css/bootstrap.min.css]
Looking up handler method for path /css/slide.css
Looking up handler method for path /css/bootstrap.min.css
Looking up handler method for path /js/jquery.min.js
Did not find handler method for [/css/fileinput.min.css]
Did not find handler method for [/css/bootstrap.min.css]
Matching patterns for request [/css/fileinput.min.css] are [/**]
Matching patterns for request [/css/bootstrap.min.css] are [/**]
URI Template variables for request [/css/bootstrap.min.css] are {}
Mapping [/css/bootstrap.min.css] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/css/bootstrap.min.css] is: -1
URI Template variables for request [/css/fileinput.min.css] are {}
Mapping [/css/fileinput.min.css] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/css/fileinput.min.css] is: -1
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@10f83bca
Did not find handler method for [/js/jquery.min.js]
Matching patterns for request [/js/jquery.min.js] are [/**]
URI Template variables for request [/js/jquery.min.js] are {}
Mapping [/js/jquery.min.js] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/js/jquery.min.js] is: -1
Bound request context to thread: org.apache.catalina.connector.RequestFacade@716e6ab6
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/js/jquery-2.1.4.min.js]
Looking up handler method for path /js/jquery-2.1.4.min.js
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Did not find handler method for [/js/jquery-2.1.4.min.js]
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@1fe2641f
Matching patterns for request [/js/jquery-2.1.4.min.js] are [/**]
URI Template variables for request [/js/jquery-2.1.4.min.js] are {}
Mapping [/js/jquery-2.1.4.min.js] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/js/jquery-2.1.4.min.js] is: -1
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@3053608d
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@716e6ab6
Did not find handler method for [/css/slide.css]
Matching patterns for request [/css/slide.css] are [/**]
URI Template variables for request [/css/slide.css] are {}
Mapping [/css/slide.css] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/css/slide.css] is: -1
Bound request context to thread: org.apache.catalina.connector.RequestFacade@36063cc9
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/css/flat-ui.min.css]
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@6528cec7
Looking up handler method for path /css/flat-ui.min.css
Did not find handler method for [/css/flat-ui.min.css]
Matching patterns for request [/css/flat-ui.min.css] are [/**]
URI Template variables for request [/css/flat-ui.min.css] are {}
Mapping [/css/flat-ui.min.css] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/css/flat-ui.min.css] is: -1
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@36063cc9
Bound request context to thread: org.apache.catalina.connector.RequestFacade@36063cc9
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/css/common.css]
Looking up handler method for path /css/common.css
Did not find handler method for [/css/common.css]
Matching patterns for request [/css/common.css] are [/**]
URI Template variables for request [/css/common.css] are {}
Mapping [/css/common.css] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/css/common.css] is: -1
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Bound request context to thread: org.apache.catalina.connector.RequestFacade@716e6ab6
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/js/bootstrap.min.js]
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@36063cc9
Looking up handler method for path /js/bootstrap.min.js
Did not find handler method for [/js/bootstrap.min.js]
Matching patterns for request [/js/bootstrap.min.js] are [/**]
URI Template variables for request [/js/bootstrap.min.js] are {}
Mapping [/js/bootstrap.min.js] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/js/bootstrap.min.js] is: -1
Bound request context to thread: org.apache.catalina.connector.RequestFacade@3053608d
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/css/jquery.nouislider.css]
Looking up handler method for path /css/jquery.nouislider.css
Bound request context to thread: org.apache.catalina.connector.RequestFacade@6528cec7
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/js/fileinput.min.js]
Did not find handler method for [/css/jquery.nouislider.css]
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Matching patterns for request [/css/jquery.nouislider.css] are [/**]
Successfully completed request
Looking up handler method for path /js/fileinput.min.js
URI Template variables for request [/css/jquery.nouislider.css] are {}
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@716e6ab6
Mapping [/css/jquery.nouislider.css] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/css/jquery.nouislider.css] is: -1
Did not find handler method for [/js/fileinput.min.js]
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@3053608d
Matching patterns for request [/js/fileinput.min.js] are [/**]
URI Template variables for request [/js/fileinput.min.js] are {}
Mapping [/js/fileinput.min.js] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/js/fileinput.min.js] is: -1
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@6528cec7
Bound request context to thread: org.apache.catalina.connector.RequestFacade@6528cec7
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/js/jquery.nouislider.js]
Looking up handler method for path /js/jquery.nouislider.js
Did not find handler method for [/js/jquery.nouislider.js]
Matching patterns for request [/js/jquery.nouislider.js] are [/**]
URI Template variables for request [/js/jquery.nouislider.js] are {}
Mapping [/js/jquery.nouislider.js] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/js/jquery.nouislider.js] is: -1
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@6528cec7
Bound request context to thread: org.apache.catalina.connector.RequestFacade@6528cec7
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/images/logo.png]
Looking up handler method for path /images/logo.png
Did not find handler method for [/images/logo.png]
Matching patterns for request [/images/logo.png] are [/**]
URI Template variables for request [/images/logo.png] are {}
Mapping [/images/logo.png] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/images/logo.png] is: -1
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@6528cec7
Bound request context to thread: org.apache.catalina.connector.RequestFacade@6528cec7
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/images/icon_char.png]
Looking up handler method for path /images/icon_char.png
Did not find handler method for [/images/icon_char.png]
Matching patterns for request [/images/icon_char.png] are [/**]
URI Template variables for request [/images/icon_char.png] are {}
Mapping [/images/icon_char.png] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/images/icon_char.png] is: -1
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@6528cec7
Bound request context to thread: org.apache.catalina.connector.RequestFacade@6528cec7
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/images/icon_user_grey.png]
Looking up handler method for path /images/icon_user_grey.png
Did not find handler method for [/images/icon_user_grey.png]
Matching patterns for request [/images/icon_user_grey.png] are [/**]
URI Template variables for request [/images/icon_user_grey.png] are {}
Mapping [/images/icon_user_grey.png] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/images/icon_user_grey.png] is: -1
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@6528cec7
Bound request context to thread: org.apache.catalina.connector.RequestFacade@6528cec7
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/images/icon_house_grey.png]
Looking up handler method for path /images/icon_house_grey.png
Did not find handler method for [/images/icon_house_grey.png]
Matching patterns for request [/images/icon_house_grey.png] are [/**]
URI Template variables for request [/images/icon_house_grey.png] are {}
Mapping [/images/icon_house_grey.png] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/images/icon_house_grey.png] is: -1
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@6528cec7
Bound request context to thread: org.apache.catalina.connector.RequestFacade@6528cec7
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/images/icon_change_grey.png]
Looking up handler method for path /images/icon_change_grey.png
Did not find handler method for [/images/icon_change_grey.png]
Matching patterns for request [/images/icon_change_grey.png] are [/**]
URI Template variables for request [/images/icon_change_grey.png] are {}
Mapping [/images/icon_change_grey.png] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/images/icon_change_grey.png] is: -1
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@6528cec7
Bound request context to thread: org.apache.catalina.connector.RequestFacade@6528cec7
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/images/1.bmp]
Looking up handler method for path /images/1.bmp
Did not find handler method for [/images/1.bmp]
Matching patterns for request [/images/1.bmp] are [/**]
URI Template variables for request [/images/1.bmp] are {}
Mapping [/images/1.bmp] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/images/1.bmp] is: -1
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@6528cec7
Bound request context to thread: org.apache.catalina.connector.RequestFacade@6528cec7
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/fonts/lato/lato-bold.woff]
Looking up handler method for path /fonts/lato/lato-bold.woff
Did not find handler method for [/fonts/lato/lato-bold.woff]
Matching patterns for request [/fonts/lato/lato-bold.woff] are [/**]
URI Template variables for request [/fonts/lato/lato-bold.woff] are {}
Mapping [/fonts/lato/lato-bold.woff] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/fonts/lato/lato-bold.woff] is: -1
Skip CORS processing: request is from same origin
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@6528cec7
Bound request context to thread: org.apache.catalina.connector.RequestFacade@6528cec7
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/fonts/lato/lato-regular.woff]
Looking up handler method for path /fonts/lato/lato-regular.woff
Did not find handler method for [/fonts/lato/lato-regular.woff]
Matching patterns for request [/fonts/lato/lato-regular.woff] are [/**]
URI Template variables for request [/fonts/lato/lato-regular.woff] are {}
Mapping [/fonts/lato/lato-regular.woff] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/fonts/lato/lato-regular.woff] is: -1
Skip CORS processing: request is from same origin
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@6528cec7
Bound request context to thread: org.apache.catalina.connector.RequestFacade@6528cec7
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/fonts/glyphicons-halflings-regular.woff2]
Looking up handler method for path /fonts/glyphicons-halflings-regular.woff2
Did not find handler method for [/fonts/glyphicons-halflings-regular.woff2]
Matching patterns for request [/fonts/glyphicons-halflings-regular.woff2] are [/**]
URI Template variables for request [/fonts/glyphicons-halflings-regular.woff2] are {}
Mapping [/fonts/glyphicons-halflings-regular.woff2] to HandlerExecutionChain with handler [ResourceHttpRequestHandler [locations=[class path resource [templates/], ServletContext resource [/]], resolvers=[org.springframework.web.servlet.resource.PathResourceResolver@49469ffa]]] and 1 interceptor
Last-Modified value for [/yihao/fonts/glyphicons-halflings-regular.woff2] is: -1
Skip CORS processing: request is from same origin
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@6528cec7
HikariPool-1 - Pool stats (total=1, active=0, idle=1, waiting=0)
HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@38bbf0bd
Bound request context to thread: org.apache.catalina.connector.RequestFacade@36063cc9
DispatcherServlet with name 'dispatcherServlet' processing GET request for [/yihao/TypeAll]
Looking up handler method for path /TypeAll
Returning handler method [public void com.yihao86.controller.TypeController.TypeAll(javax.servlet.http.HttpServletResponse) throws java.io.IOException]
Returning cached instance of singleton bean 'typeController'
Last-Modified value for [/yihao/TypeAll] is: -1
Creating a new SqlSession
SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e6b7b61] was not registered for synchronization because synchronization is not active
Fetching JDBC Connection from DataSource
JDBC Connection [HikariProxyConnection@1247082100 wrapping com.mysql.jdbc.JDBC4Connection@573053b8] will not be managed by Spring
==>  Preparing: SELECT * FROM `type` WHERE `f_trid` <> `typeid` 
==> Parameters: 
<==      Total: 30
Closing non transactional SqlSession [org.apache.ibatis.session.defaults.DefaultSqlSession@4e6b7b61]
Returning JDBC Connection to DataSource
Null ModelAndView returned to DispatcherServlet with name 'dispatcherServlet': assuming HandlerAdapter completed request handling
Successfully completed request
Cleared thread-bound request context: org.apache.catalina.connector.RequestFacade@36063cc9
HikariPool-1 - Pool stats (total=2, active=0, idle=2, waiting=0)
HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@52f1f01b
HikariPool-1 - Pool stats (total=3, active=0, idle=3, waiting=0)
HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@56dd1129: (Failed to create/setup connection)
HikariPool-1 - Closing connection com.mysql.jdbc.JDBC4Connection@56dd1129 failed
com.mysql.jdbc.exceptions.jdbc4.MySQLNonTransientConnectionException: No operations allowed after connection closed.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.Util.getInstance(Util.java:408)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:919)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:898)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:887)
	at com.mysql.jdbc.SQLError.createSQLException(SQLError.java:861)
	at com.mysql.jdbc.ConnectionImpl.throwConnectionClosedException(ConnectionImpl.java:1184)
	at com.mysql.jdbc.ConnectionImpl.checkClosed(ConnectionImpl.java:1179)
	at com.mysql.jdbc.ConnectionImpl.setNetworkTimeout(ConnectionImpl.java:5498)
	at com.zaxxer.hikari.pool.PoolBase.setNetworkTimeout(PoolBase.java:541)
	at com.zaxxer.hikari.pool.PoolBase.quietlyCloseConnection(PoolBase.java:129)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:376)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:194)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:460)
	at com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:699)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:685)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet successfully received from the server was 5,000 milliseconds ago.  The last packet sent successfully to the server was 5,000 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3559)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3459)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3900)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2480)
	at com.mysql.jdbc.ConnectionImpl.setReadOnlyInternal(ConnectionImpl.java:4953)
	at com.mysql.jdbc.ConnectionImpl.setReadOnly(ConnectionImpl.java:4946)
	at com.zaxxer.hikari.pool.PoolBase.setupConnection(PoolBase.java:409)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:370)
	... 9 common frames omitted
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.jdbc.util.ReadAheadInputStream.fill(ReadAheadInputStream.java:101)
	at com.mysql.jdbc.util.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:144)
	at com.mysql.jdbc.util.ReadAheadInputStream.read(ReadAheadInputStream.java:174)
	at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:3008)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3469)
	... 18 common frames omitted
HikariPool-1 - Cannot acquire connection from data source
com.mysql.jdbc.exceptions.jdbc4.CommunicationsException: Communications link failure

The last packet successfully received from the server was 5,000 milliseconds ago.  The last packet sent successfully to the server was 5,000 milliseconds ago.
	at sun.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)
	at sun.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:62)
	at sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)
	at java.lang.reflect.Constructor.newInstance(Constructor.java:423)
	at com.mysql.jdbc.Util.handleNewInstance(Util.java:425)
	at com.mysql.jdbc.SQLError.createCommunicationsException(SQLError.java:990)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3559)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3459)
	at com.mysql.jdbc.MysqlIO.checkErrorPacket(MysqlIO.java:3900)
	at com.mysql.jdbc.MysqlIO.sendCommand(MysqlIO.java:2527)
	at com.mysql.jdbc.MysqlIO.sqlQueryDirect(MysqlIO.java:2680)
	at com.mysql.jdbc.ConnectionImpl.execSQL(ConnectionImpl.java:2480)
	at com.mysql.jdbc.ConnectionImpl.setReadOnlyInternal(ConnectionImpl.java:4953)
	at com.mysql.jdbc.ConnectionImpl.setReadOnly(ConnectionImpl.java:4946)
	at com.zaxxer.hikari.pool.PoolBase.setupConnection(PoolBase.java:409)
	at com.zaxxer.hikari.pool.PoolBase.newConnection(PoolBase.java:370)
	at com.zaxxer.hikari.pool.PoolBase.newPoolEntry(PoolBase.java:194)
	at com.zaxxer.hikari.pool.HikariPool.createPoolEntry(HikariPool.java:460)
	at com.zaxxer.hikari.pool.HikariPool.access$100(HikariPool.java:71)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:699)
	at com.zaxxer.hikari.pool.HikariPool$PoolEntryCreator.call(HikariPool.java:685)
	at java.util.concurrent.FutureTask.run(FutureTask.java:266)
	at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1142)
	at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:617)
	at java.lang.Thread.run(Thread.java:745)
Caused by: java.net.SocketTimeoutException: Read timed out
	at java.net.SocketInputStream.socketRead0(Native Method)
	at java.net.SocketInputStream.socketRead(SocketInputStream.java:116)
	at java.net.SocketInputStream.read(SocketInputStream.java:170)
	at java.net.SocketInputStream.read(SocketInputStream.java:141)
	at com.mysql.jdbc.util.ReadAheadInputStream.fill(ReadAheadInputStream.java:101)
	at com.mysql.jdbc.util.ReadAheadInputStream.readFromUnderlyingStreamIfNecessary(ReadAheadInputStream.java:144)
	at com.mysql.jdbc.util.ReadAheadInputStream.read(ReadAheadInputStream.java:174)
	at com.mysql.jdbc.MysqlIO.readFully(MysqlIO.java:3008)
	at com.mysql.jdbc.MysqlIO.reuseAndReadPacket(MysqlIO.java:3469)
	... 18 common frames omitted
HikariPool-1 - Pool stats (total=3, active=0, idle=3, waiting=0)
HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@50c90a7a
HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@72d4cf7c
HikariPool-1 - Pool stats (total=5, active=0, idle=5, waiting=0)
HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@4a6ac82b
HikariPool-1 - Pool stats (total=6, active=0, idle=6, waiting=0)
HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@5a6e1055
HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@38af43b0
HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@1f770b12
HikariPool-1 - Pool stats (total=9, active=0, idle=9, waiting=0)
HikariPool-1 - Added connection com.mysql.jdbc.JDBC4Connection@5fb148b6
HikariPool-1 - After adding stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, chid=0x1] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, chid=0x1] channelInactive()
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 0 command(s) to buffer
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, chid=0x1] channelInactive() done
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0xafff7cdf, /192.168.43.15:61476 -> /111.230.232.46:6379, chid=0x1] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0xc7e463be, [id: 0xc95ddea8] (inactive), chid=0x2] channelRegistered()
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, chid=0x2] channelActive()
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 0 command(s) buffered
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, chid=0x2] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, chid=0x2] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 0 commands
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, chid=0x2] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@646b0118)
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@646b0118)
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, chid=0x2] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, chid=0x2] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, chid=0x2] channelInactive()
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 1 command(s) to buffer
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, chid=0x2] channelInactive() done
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0xc7e463be, /172.17.16.200:61993 -> /111.230.232.46:6379, chid=0x2] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x7d521376, [id: 0x8450626c] (inactive), chid=0x3] channelRegistered()
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, chid=0x3] channelActive()
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 1 command(s) buffered
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, chid=0x3] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, chid=0x3] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 1 commands
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, chid=0x3] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, chid=0x3] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@4808376d)
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@4808376d)
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, chid=0x3] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, chid=0x3] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, chid=0x3] channelInactive()
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 2 command(s) to buffer
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, chid=0x3] channelInactive() done
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x7d521376, /172.17.16.200:61995 -> /111.230.232.46:6379, chid=0x3] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x420ed813, [id: 0xc7a42741] (inactive), chid=0x4] channelRegistered()
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, chid=0x4] channelActive()
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 2 command(s) buffered
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, chid=0x4] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, chid=0x4] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 2 commands
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, chid=0x4] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, chid=0x4] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, chid=0x4] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@3620bf4b)
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@3620bf4b)
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, chid=0x4] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, chid=0x4] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, chid=0x4] channelInactive()
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 3 command(s) to buffer
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, chid=0x4] channelInactive() done
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x420ed813, /172.17.16.200:61996 -> /111.230.232.46:6379, chid=0x4] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x91a2d31d, [id: 0x78708230] (inactive), chid=0x5] channelRegistered()
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, chid=0x5] channelActive()
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 3 command(s) buffered
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, chid=0x5] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, chid=0x5] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 3 commands
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, chid=0x5] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, chid=0x5] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, chid=0x5] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, chid=0x5] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@43c3e15e)
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@43c3e15e)
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, chid=0x5] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, chid=0x5] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, chid=0x5] channelInactive()
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 4 command(s) to buffer
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, chid=0x5] channelInactive() done
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x91a2d31d, /172.17.16.200:61998 -> /111.230.232.46:6379, chid=0x5] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x5e304869, [id: 0x2f04c078] (inactive), chid=0x6] channelRegistered()
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, chid=0x6] channelActive()
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 4 command(s) buffered
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, chid=0x6] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, chid=0x6] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 4 commands
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, chid=0x6] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, chid=0x6] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, chid=0x6] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, chid=0x6] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, chid=0x6] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@3f8a0e16)
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@3f8a0e16)
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, chid=0x6] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, chid=0x6] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, chid=0x6] channelInactive()
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 5 command(s) to buffer
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, chid=0x6] channelInactive() done
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x5e304869, /172.17.16.200:61999 -> /111.230.232.46:6379, chid=0x6] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x13991402, [id: 0x62d7e031] (inactive), chid=0x7] channelRegistered()
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, chid=0x7] channelActive()
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 5 command(s) buffered
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, chid=0x7] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, chid=0x7] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 5 commands
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, chid=0x7] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, chid=0x7] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, chid=0x7] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, chid=0x7] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, chid=0x7] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, chid=0x7] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@3c4dd8ba)
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@3c4dd8ba)
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, chid=0x7] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, chid=0x7] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, chid=0x7] channelInactive()
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 6 command(s) to buffer
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, chid=0x7] channelInactive() done
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x13991402, /172.17.16.200:62000 -> /111.230.232.46:6379, chid=0x7] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x23a81459, [id: 0x99b1db7b] (inactive), chid=0x8] channelRegistered()
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, chid=0x8] channelActive()
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 6 command(s) buffered
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, chid=0x8] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, chid=0x8] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 6 commands
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, chid=0x8] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, chid=0x8] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, chid=0x8] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, chid=0x8] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, chid=0x8] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, chid=0x8] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, chid=0x8] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@421b01f1)
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@421b01f1)
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, chid=0x8] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, chid=0x8] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, chid=0x8] channelInactive()
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 7 command(s) to buffer
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, chid=0x8] channelInactive() done
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x23a81459, /172.17.16.200:62001 -> /111.230.232.46:6379, chid=0x8] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x7eb060c4, [id: 0x738c1cf0] (inactive), chid=0x9] channelRegistered()
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, chid=0x9] channelActive()
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 7 command(s) buffered
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, chid=0x9] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, chid=0x9] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 7 commands
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, chid=0x9] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, chid=0x9] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, chid=0x9] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, chid=0x9] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, chid=0x9] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, chid=0x9] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, chid=0x9] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, chid=0x9] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@4fb360fc)
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@4fb360fc)
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, chid=0x9] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, chid=0x9] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, chid=0x9] channelInactive()
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 8 command(s) to buffer
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, chid=0x9] channelInactive() done
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x7eb060c4, /172.17.16.200:62002 -> /111.230.232.46:6379, chid=0x9] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x43197a8c, [id: 0xa77c36c7] (inactive), chid=0xa] channelRegistered()
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, chid=0xa] channelActive()
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 8 command(s) buffered
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, chid=0xa] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, chid=0xa] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 8 commands
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, chid=0xa] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, chid=0xa] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, chid=0xa] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, chid=0xa] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, chid=0xa] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, chid=0xa] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, chid=0xa] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, chid=0xa] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, chid=0xa] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@7a425177)
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@7a425177)
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, chid=0xa] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, chid=0xa] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, chid=0xa] channelInactive()
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 9 command(s) to buffer
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, chid=0xa] channelInactive() done
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x43197a8c, /172.17.16.200:62003 -> /111.230.232.46:6379, chid=0xa] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x18ae59cc, [id: 0x85ebad9f] (inactive), chid=0xb] channelRegistered()
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, chid=0xb] channelActive()
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 9 command(s) buffered
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, chid=0xb] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, chid=0xb] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 9 commands
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, chid=0xb] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, chid=0xb] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, chid=0xb] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, chid=0xb] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, chid=0xb] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, chid=0xb] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, chid=0xb] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, chid=0xb] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, chid=0xb] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379 (inactive), last known addr=/111.230.232.46:6379] channelActive()
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379 (inactive), last known addr=/111.230.232.46:6379] channelActive()
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, chid=0xb] channelActive() done
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] write() done
Reconnected to 111.230.232.46:6379, Channel channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379 (inactive)
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379 (inactive), last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@6933970e)
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379 (inactive), last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@6933970e)
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, chid=0xb] channelInactive()
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 2 command(s) to buffer
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, chid=0xb] channelInactive() done
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379 (inactive), last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379 (inactive), last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379 (inactive), last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379 (inactive), last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379 (inactive), last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379 (inactive), last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x18ae59cc, /172.17.16.200:62004 -> /111.230.232.46:6379, chid=0xb] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x0673e356, [id: 0x8cb4b60c] (inactive), chid=0xc] channelRegistered()
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, chid=0xc] channelActive()
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 11 command(s) buffered
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, chid=0xc] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, chid=0xc] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 11 commands
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, chid=0xc] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, chid=0xc] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, chid=0xc] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, chid=0xc] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, chid=0xc] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, chid=0xc] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, chid=0xc] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, chid=0xc] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, chid=0xc] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, chid=0xc] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, chid=0xc] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, chid=0xc] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@104a12f1)
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@104a12f1)
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, chid=0xc] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, chid=0xc] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, chid=0xc] channelInactive()
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 12 command(s) to buffer
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, chid=0xc] channelInactive() done
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x0673e356, /172.17.16.200:62005 -> /111.230.232.46:6379, chid=0xc] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x8724be4d, [id: 0x3cbd18c6] (inactive), chid=0xd] channelRegistered()
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, chid=0xd] channelActive()
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 12 command(s) buffered
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, chid=0xd] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, chid=0xd] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 12 commands
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, chid=0xd] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, chid=0xd] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, chid=0xd] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, chid=0xd] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, chid=0xd] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, chid=0xd] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, chid=0xd] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, chid=0xd] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, chid=0xd] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, chid=0xd] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, chid=0xd] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, chid=0xd] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, chid=0xd] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@38b6cedb)
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@38b6cedb)
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, chid=0xd] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, chid=0xd] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, chid=0xd] channelInactive()
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 13 command(s) to buffer
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, chid=0xd] channelInactive() done
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x8724be4d, /172.17.16.200:62006 -> /111.230.232.46:6379, chid=0xd] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x5856de74, [id: 0x09fad9bb] (inactive), chid=0xe] channelRegistered()
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, chid=0xe] channelActive()
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 13 command(s) buffered
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, chid=0xe] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, chid=0xe] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 13 commands
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, chid=0xe] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, chid=0xe] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, chid=0xe] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, chid=0xe] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, chid=0xe] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, chid=0xe] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, chid=0xe] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, chid=0xe] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, chid=0xe] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, chid=0xe] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, chid=0xe] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, chid=0xe] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, chid=0xe] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, chid=0xe] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@636203b5)
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@636203b5)
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, chid=0xe] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, chid=0xe] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, chid=0xe] channelInactive()
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 14 command(s) to buffer
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, chid=0xe] channelInactive() done
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x5856de74, /172.17.16.200:62007 -> /111.230.232.46:6379, chid=0xe] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x84a92f4a, [id: 0xc2934c7d] (inactive), chid=0xf] channelRegistered()
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] channelActive()
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 14 command(s) buffered
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 14 commands
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@1604daf8)
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@1604daf8)
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] channelInactive()
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 15 command(s) to buffer
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] channelInactive() done
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x84a92f4a, /172.17.16.200:62008 -> /111.230.232.46:6379, chid=0xf] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x9cd90b8b, [id: 0x61968a2e] (inactive), chid=0x10] channelRegistered()
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] channelActive()
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 15 command(s) buffered
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 15 commands
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@17433710)
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@17433710)
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] channelInactive()
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 16 command(s) to buffer
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] channelInactive() done
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x9cd90b8b, /172.17.16.200:62010 -> /111.230.232.46:6379, chid=0x10] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0xe0d1c1c9, [id: 0xa1f399f1] (inactive), chid=0x11] channelRegistered()
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] channelActive()
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 16 command(s) buffered
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 16 commands
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@47625aeb)
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@47625aeb)
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] channelInactive()
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 17 command(s) to buffer
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] channelInactive() done
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0xe0d1c1c9, /172.17.16.200:62011 -> /111.230.232.46:6379, chid=0x11] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0xfdfcfbc6, [id: 0x84ccdb57] (inactive), chid=0x12] channelRegistered()
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] channelActive()
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 17 command(s) buffered
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 17 commands
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@26eeb158)
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@26eeb158)
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] channelInactive()
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 18 command(s) to buffer
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] channelInactive() done
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0xfdfcfbc6, /172.17.16.200:62035 -> /111.230.232.46:6379, chid=0x12] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x4a7de5de, [id: 0x51784e01] (inactive), chid=0x13] channelRegistered()
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] channelActive()
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 18 command(s) buffered
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 18 commands
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@3d9d1555)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@3d9d1555)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] channelInactive()
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 19 command(s) to buffer
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] channelInactive() done
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x4a7de5de, /172.17.16.200:62036 -> /111.230.232.46:6379, chid=0x13] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x4f8b942c, [id: 0x45cd5f2b] (inactive), chid=0x14] channelRegistered()
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] channelActive()
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 19 command(s) buffered
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 19 commands
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@27a06ed6)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@27a06ed6)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] channelInactive()
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 20 command(s) to buffer
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] channelInactive() done
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x4f8b942c, /172.17.16.200:62042 -> /111.230.232.46:6379, chid=0x14] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0xe41f2de1, [id: 0x32302926] (inactive), chid=0x15] channelRegistered()
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] channelActive()
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 20 command(s) buffered
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 20 commands
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@3e934ff8)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@3e934ff8)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] channelInactive()
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 21 command(s) to buffer
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] channelInactive() done
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0xe41f2de1, /172.17.16.200:62052 -> /111.230.232.46:6379, chid=0x15] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x6f1e2159, [id: 0x5df0bf5d] (inactive), chid=0x16] channelRegistered()
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] channelActive()
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 21 command(s) buffered
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 21 commands
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@7e8638f)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@7e8638f)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] channelInactive()
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 22 command(s) to buffer
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] channelInactive() done
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x6f1e2159, /172.17.16.200:62069 -> /111.230.232.46:6379, chid=0x16] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x7a127924, [id: 0xda693347] (inactive), chid=0x17] channelRegistered()
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] channelActive()
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 22 command(s) buffered
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 22 commands
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.writev0(Native Method)
	at sun.nio.ch.SocketDispatcher.writev(SocketDispatcher.java:55)
	at sun.nio.ch.IOUtil.write(IOUtil.java:148)
	at sun.nio.ch.SocketChannelImpl.write(SocketChannelImpl.java:504)
	at io.netty.channel.socket.nio.NioSocketChannel.doWrite(NioSocketChannel.java:418)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush0(AbstractChannel.java:934)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.flush0(AbstractNioChannel.java:360)
	at io.netty.channel.AbstractChannel$AbstractUnsafe.flush(AbstractChannel.java:901)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.flush(DefaultChannelPipeline.java:1396)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelOutboundHandlerAdapter.flush(ChannelOutboundHandlerAdapter.java:115)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.ChannelDuplexHandler.flush(ChannelDuplexHandler.java:117)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush0(AbstractChannelHandlerContext.java:776)
	at io.netty.channel.AbstractChannelHandlerContext.invokeFlush(AbstractChannelHandlerContext.java:768)
	at io.netty.channel.AbstractChannelHandlerContext.flush(AbstractChannelHandlerContext.java:749)
	at io.netty.channel.DefaultChannelPipeline.flush(DefaultChannelPipeline.java:1013)
	at io.netty.channel.AbstractChannel.flush(AbstractChannel.java:248)
	at io.lettuce.core.protocol.DefaultEndpoint.channelFlush(DefaultEndpoint.java:298)
	at io.lettuce.core.protocol.DefaultEndpoint.writeToChannelAndFlush(DefaultEndpoint.java:289)
	at io.lettuce.core.protocol.DefaultEndpoint.flushCommands(DefaultEndpoint.java:468)
	at io.lettuce.core.protocol.DefaultEndpoint.lambda$notifyChannelActive$0(DefaultEndpoint.java:378)
	at io.lettuce.core.protocol.SharedLock.lambda$doExclusive$0(SharedLock.java:82)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:103)
	at io.lettuce.core.protocol.SharedLock.doExclusive(SharedLock.java:81)
	at io.lettuce.core.protocol.DefaultEndpoint.notifyChannelActive(DefaultEndpoint.java:360)
	at io.lettuce.core.protocol.CommandHandler.channelActive(CommandHandler.java:258)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.ChannelGroupListener.channelActive(ChannelGroupListener.java:40)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.ChannelInboundHandlerAdapter.channelActive(ChannelInboundHandlerAdapter.java:64)
	at io.lettuce.core.PlainChannelInitializer$1.channelActive(PlainChannelInitializer.java:109)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.AbstractChannelHandlerContext.fireChannelActive(AbstractChannelHandlerContext.java:192)
	at io.netty.channel.DefaultChannelPipeline$HeadContext.channelActive(DefaultChannelPipeline.java:1422)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:213)
	at io.netty.channel.AbstractChannelHandlerContext.invokeChannelActive(AbstractChannelHandlerContext.java:199)
	at io.netty.channel.DefaultChannelPipeline.fireChannelActive(DefaultChannelPipeline.java:941)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.fulfillConnectPromise(AbstractNioChannel.java:311)
	at io.netty.channel.nio.AbstractNioChannel$AbstractNioUnsafe.finishConnect(AbstractNioChannel.java:341)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:635)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379 (inactive), last known addr=/111.230.232.46:6379] channelActive()
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379 (inactive), last known addr=/111.230.232.46:6379] channelActive()
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] channelActive() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] writeToDisconnectedBuffer() buffering (disconnected) command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] write() done
Reconnected to 111.230.232.46:6379, Channel channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379 (inactive)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379 (inactive), last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@4ec4178b)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379 (inactive), last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@4ec4178b)
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] channelInactive()
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 2 command(s) to buffer
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] channelInactive() done
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379 (inactive), last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379 (inactive), last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379 (inactive), last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379 (inactive), last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379 (inactive), last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379 (inactive), last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x7a127924, /172.17.16.200:62070 -> /111.230.232.46:6379, chid=0x17] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x8bc19096, [id: 0xfd2bf94d] (inactive), chid=0x18] channelRegistered()
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] channelActive()
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 24 command(s) buffered
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 24 commands
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@12a0a76c)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@12a0a76c)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] channelInactive()
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 25 command(s) to buffer
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] channelInactive() done
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x8bc19096, /172.17.16.200:62082 -> /111.230.232.46:6379, chid=0x18] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x770c9f49, [id: 0x67c0f49b] (inactive), chid=0x19] channelRegistered()
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] channelActive()
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 25 command(s) buffered
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 25 commands
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@3671fa49)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@3671fa49)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] channelInactive()
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 26 command(s) to buffer
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] channelInactive() done
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x770c9f49, /172.17.16.200:62085 -> /111.230.232.46:6379, chid=0x19] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x95cc2ad5, [id: 0x8ed76e68] (inactive), chid=0x1a] channelRegistered()
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] channelActive()
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 26 command(s) buffered
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 26 commands
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@6f95b853)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@6f95b853)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] channelInactive()
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 27 command(s) to buffer
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] channelInactive() done
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x95cc2ad5, /172.17.16.200:62087 -> /111.230.232.46:6379, chid=0x1a] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0xb4d9ae82, [id: 0x8d22b00a] (inactive), chid=0x1b] channelRegistered()
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] channelActive()
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 27 command(s) buffered
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 27 commands
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@47a403e3)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@47a403e3)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] channelInactive()
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 28 command(s) to buffer
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] channelInactive() done
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0xb4d9ae82, /172.17.16.200:62093 -> /111.230.232.46:6379, chid=0x1b] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0xc73060a7, [id: 0x03415177] (inactive), chid=0x1c] channelRegistered()
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] channelActive()
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 28 command(s) buffered
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 28 commands
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@26e41326)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@26e41326)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] channelInactive()
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 29 command(s) to buffer
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] channelInactive() done
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0xc73060a7, /172.17.16.200:62095 -> /111.230.232.46:6379, chid=0x1c] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x3498521d, [id: 0x2c542061] (inactive), chid=0x1d] channelRegistered()
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] channelActive()
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 29 command(s) buffered
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 29 commands
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@1966e4c)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@1966e4c)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] channelInactive()
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 30 command(s) to buffer
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] channelInactive() done
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x3498521d, /172.17.16.200:62097 -> /111.230.232.46:6379, chid=0x1d] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0xee3f4a8b, [id: 0x77866262] (inactive), chid=0x1e] channelRegistered()
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] channelActive()
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 30 command(s) buffered
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 30 commands
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@346998b9)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@346998b9)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] channelInactive()
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 31 command(s) to buffer
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] channelInactive() done
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0xee3f4a8b, /172.17.16.200:62098 -> /111.230.232.46:6379, chid=0x1e] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0xd4de6306, [id: 0xd7c6c635] (inactive), chid=0x1f] channelRegistered()
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] channelActive()
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 31 command(s) buffered
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 31 commands
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@21103396)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@21103396)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] channelInactive()
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 32 command(s) to buffer
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] channelInactive() done
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0xd4de6306, /172.17.16.200:62099 -> /111.230.232.46:6379, chid=0x1f] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x490b8bac, [id: 0x1ef8e289] (inactive), chid=0x20] channelRegistered()
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] channelActive()
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 32 command(s) buffered
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 32 commands
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@7ff31a54)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@7ff31a54)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] channelInactive()
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 33 command(s) to buffer
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] channelInactive() done
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x490b8bac, /172.17.16.200:62100 -> /111.230.232.46:6379, chid=0x20] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x40e9d3c0, [id: 0x66f317c2] (inactive), chid=0x21] channelRegistered()
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] channelActive()
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 33 command(s) buffered
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 33 commands
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@38d2ed5)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@38d2ed5)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] channelInactive()
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 34 command(s) to buffer
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] channelInactive() done
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x40e9d3c0, /172.17.16.200:62101 -> /111.230.232.46:6379, chid=0x21] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x545406dd, [id: 0xf6163e66] (inactive), chid=0x22] channelRegistered()
HikariPool-1 - Pool stats (total=10, active=0, idle=10, waiting=0)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] channelActive()
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 34 command(s) buffered
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 34 commands
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@5843507c)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@5843507c)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] channelInactive()
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 35 command(s) to buffer
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] channelInactive() done
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x545406dd, /172.17.16.200:62102 -> /111.230.232.46:6379, chid=0x22] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0xd0993bc5, [id: 0x47ef50df] (inactive), chid=0x23] channelRegistered()
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] channelActive()
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 35 command(s) buffered
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 35 commands
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@52e88a17)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@52e88a17)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] channelInactive()
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 36 command(s) to buffer
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] channelInactive() done
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0xd0993bc5, /172.17.16.200:62103 -> /111.230.232.46:6379, chid=0x23] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0xb8d0e448, [id: 0xf24cee64] (inactive), chid=0x24] channelRegistered()
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] channelActive()
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 36 command(s) buffered
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 36 commands
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@186e6706)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@186e6706)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] channelInactive()
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 37 command(s) to buffer
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] channelInactive() done
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0xb8d0e448, /172.17.16.200:62104 -> /111.230.232.46:6379, chid=0x24] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x6f688234, [id: 0xd72d39ec] (inactive), chid=0x25] channelRegistered()
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] channelActive()
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 37 command(s) buffered
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 37 commands
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@2d281ec3)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@2d281ec3)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] channelInactive()
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 38 command(s) to buffer
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] channelInactive() done
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x6f688234, /172.17.16.200:62105 -> /111.230.232.46:6379, chid=0x25] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x1afea79f, [id: 0x1257ad3b] (inactive), chid=0x26] channelRegistered()
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] channelActive()
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 38 command(s) buffered
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 38 commands
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@442bb675)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@442bb675)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] channelInactive()
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 39 command(s) to buffer
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] channelInactive() done
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x1afea79f, /172.17.16.200:62106 -> /111.230.232.46:6379, chid=0x26] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0x6895f774, [id: 0xbb4e10bd] (inactive), chid=0x27] channelRegistered()
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] channelActive()
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 39 command(s) buffered
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 39 commands
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] write() channelFlush
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelActive()
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] channelActive() done
Reconnected to 111.230.232.46:6379, Channel channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@3afa7622)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] userEventTriggered(ctx, io.lettuce.core.ConnectionEvents$Activated@3afa7622)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] Storing exception in AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] Unexpected exception during request: java.io.IOException: 远程主机强迫关闭了一个现有的连接。
java.io.IOException: 远程主机强迫关闭了一个现有的连接。
	at sun.nio.ch.SocketDispatcher.read0(Native Method)
	at sun.nio.ch.SocketDispatcher.read(SocketDispatcher.java:43)
	at sun.nio.ch.IOUtil.readIntoNativeBuffer(IOUtil.java:223)
	at sun.nio.ch.IOUtil.read(IOUtil.java:192)
	at sun.nio.ch.SocketChannelImpl.read(SocketChannelImpl.java:380)
	at io.netty.buffer.PooledUnsafeDirectByteBuf.setBytes(PooledUnsafeDirectByteBuf.java:288)
	at io.netty.buffer.AbstractByteBuf.writeBytes(AbstractByteBuf.java:1108)
	at io.netty.channel.socket.nio.NioSocketChannel.doReadBytes(NioSocketChannel.java:345)
	at io.netty.channel.nio.AbstractNioByteChannel$NioByteUnsafe.read(AbstractNioByteChannel.java:148)
	at io.netty.channel.nio.NioEventLoop.processSelectedKey(NioEventLoop.java:647)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeysOptimized(NioEventLoop.java:582)
	at io.netty.channel.nio.NioEventLoop.processSelectedKeys(NioEventLoop.java:499)
	at io.netty.channel.nio.NioEventLoop.run(NioEventLoop.java:461)
	at io.netty.util.concurrent.SingleThreadEventExecutor$5.run(SingleThreadEventExecutor.java:884)
	at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30)
	at java.lang.Thread.run(Thread.java:745)
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] channelInactive()
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] deactivating endpoint handler
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, epid=0x1] notifyQueuedCommands adding 40 command(s) to buffer
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] channelInactive() done
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Reconnect attempt 1, delay 1ms
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] channelInactive()
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] scheduleReconnect()
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, last known addr=/111.230.232.46:6379] Skipping scheduleReconnect() because I have an active channel
[channel=0x6895f774, /172.17.16.200:62107 -> /111.230.232.46:6379, chid=0x27] channelUnregistered()
Reconnecting, last destination was /111.230.232.46:6379
Resolved SocketAddress 111.230.232.46:6379 using RedisURI [host='111.230.232.46', port=6379]
Reconnecting to Redis at 111.230.232.46:6379
[channel=0xc7b1b5ab, [id: 0x229ab782] (inactive), chid=0x28] channelRegistered()
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, chid=0x28] channelActive()
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, epid=0x1] activateEndpointAndExecuteBufferedCommands 40 command(s) buffered
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, epid=0x1] activating endpoint
dispatching command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, chid=0x28] write(ctx, AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379] writing command AsyncCommand [type=AUTH, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, epid=0x1] write() done
dispatching command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, epid=0x1] write() writeAndFlush command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, chid=0x28] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, epid=0x1] write() done
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, epid=0x1] flushCommands()
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, epid=0x1] flushCommands() Flushing 40 commands
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, chid=0x28] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, chid=0x28] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, chid=0x28] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, chid=0x28] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, chid=0x28] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, chid=0x28] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, chid=0x28] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, chid=0x28] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, chid=0x28] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, chid=0x28] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, chid=0x28] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, chid=0x28] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379] writing command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, epid=0x1] write() channelWrite command AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command]
[channel=0xc7b1b5ab, /172.17.16.200:62108 -> /111.230.232.46:6379, chid=0x28] write(ctx, AsyncCommand [type=SELECT, output=StatusOutput [output=null, error='null'], commandType=io.lettuce.core.protocol.Command], promise)
